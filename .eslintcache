[{"/Users/abraham/graph-editor/src/index.js":"1","/Users/abraham/graph-editor/src/App.js":"2","/Users/abraham/graph-editor/src/Canvas.js":"3","/Users/abraham/graph-editor/src/Stuff.js":"4","/Users/abraham/graph-editor/src/Edge.js":"5","/Users/abraham/graph-editor/src/Node.js":"6","/Users/abraham/graph-editor/src/Trie.js":"7","/Users/abraham/graph-editor/src/PrettyTree.js":"8"},{"size":152,"mtime":1611711971020,"results":"9","hashOfConfig":"10"},{"size":6522,"mtime":1614907105359,"results":"11","hashOfConfig":"10"},{"size":2738,"mtime":1614786175917,"results":"12","hashOfConfig":"10"},{"size":2291,"mtime":1614052585764,"results":"13","hashOfConfig":"10"},{"size":1729,"mtime":1614548527142,"results":"14","hashOfConfig":"10"},{"size":2394,"mtime":1614547636597,"results":"15","hashOfConfig":"10"},{"size":878,"mtime":1614052824741,"results":"16","hashOfConfig":"10"},{"size":5161,"mtime":1614786976037,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"14828u7",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/abraham/graph-editor/src/index.js",[],["36","37"],"/Users/abraham/graph-editor/src/App.js",[],"/Users/abraham/graph-editor/src/Canvas.js",[],"/Users/abraham/graph-editor/src/Stuff.js",["38"],"export function getRandom(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nexport function isNumeric(num) {\n  return !isNaN(num)\n}\n\nexport function isColor(x) {\n  let s = new Option().style\n  s.color = x\n  let test1 = s.color === x\n  let test2 = /^#[0-9A-F]{6}$/i.test(x)\n  return (test1 === true || test2 === true)\n}\n\nexport function isSpace(c) {\n  return (c === ' ') || (c === '\\t');\n}\n\nexport function divideByTokens(str) {\n  var result = [];\n  var last = \"\";\n  for (var i in str) {\n    var c = str[i];\n    if (isSpace(c)) {\n      if (last !== \"\") {\n        result.push(last);\n      }\n      last = \"\";\n    } else {\n      last += c;\n    }\n  }\n  if (last !== \"\") {\n    result.push(last);\n  }\n  return result;\n}\n\nexport function isLight(col) {\n  var cur = col.charAt(0) === '#' ? col.substring(1, 7) : col;\n  var r = parseInt(cur.substring(0, 2), 16); // hexToR\n  var g = parseInt(cur.substring(2, 4), 16); // hexToG\n  var b = parseInt(cur.substring(4, 6), 16); // hexToB\n  return (((r * 0.299) + (g * 0.587) + (b * 0.114)) > 186);\n}\n\nexport function pickTextColor(col) {\n  return isLight(col) ? \"black\" : \"white\";\n}\n\nfunction getRGB(v) {\n  var el = document.createElement(\"div\");\n  el.style[\"background-color\"] = v;\n  document.body.appendChild(el);\n\n  var style = window.getComputedStyle(el);\n  var color = style[\"backgroundColor\"];\n  document.body.removeChild(el);\n\n  return color;\n}\n\nfunction parseColor(color) {\n  var arr = []; \n  color.replace(/[\\d+\\.]+/g, function(v) { \n    arr.push(parseFloat(v));\n  });\n  return \"#\" + arr.slice(0, 3).map(toHex).join(\"\");\n}\n\nfunction toHex(int) {\n  var hex = int.toString(16);\n  return hex.length === 1 ? \"0\" + hex : hex;\n}\n\nexport function lightenColor(col, amt) {\n  if (col.charAt(0) !== '#') {\n    col = parseColor(getRGB(col));\n  }\n  \n  var cur = col.charAt(0) === '#' ? col.substring(1, 7) : col;\n  \n  var r = Math.max(Math.min(255, parseInt(cur.substring(0, 2), 16) + amt), 0).toString(16)\n  var g = Math.max(Math.min(255, parseInt(cur.substring(2, 4), 16) + amt), 0).toString(16)\n  var b = Math.max(Math.min(255, parseInt(cur.substring(4, 6), 16) + amt), 0).toString(16)\n  \n  const rr = (r.length < 2 ? '0' : '') + r\n  const gg = (g.length < 2 ? '0' : '') + g\n  const bb = (b.length < 2 ? '0' : '') + b\n  return `#${rr}${gg}${bb}`\n}","/Users/abraham/graph-editor/src/Edge.js",[],"/Users/abraham/graph-editor/src/Node.js",[],"/Users/abraham/graph-editor/src/Trie.js",[],"/Users/abraham/graph-editor/src/PrettyTree.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":67,"column":22,"nodeType":"45","messageId":"46","endLine":67,"endColumn":23,"suggestions":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["50","51"],"no-global-assign","no-unsafe-negation",{"messageId":"52","fix":"53","desc":"54"},{"messageId":"55","fix":"56","desc":"57"},"removeEscape",{"range":"58","text":"59"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"60","text":"61"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[1464,1465],"",[1464,1464],"\\"]