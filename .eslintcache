[{"/Users/abraham/Data-structures-editor/src/index.js":"1","/Users/abraham/Data-structures-editor/src/App.js":"2","/Users/abraham/Data-structures-editor/src/dataStructures/Graph.js":"3","/Users/abraham/Data-structures-editor/src/dataStructures/Trie.js":"4","/Users/abraham/Data-structures-editor/src/drawableComponents/Edge.js":"5","/Users/abraham/Data-structures-editor/src/drawableComponents/Node.js":"6","/Users/abraham/Data-structures-editor/src/drawableComponents/Rectangle.js":"7","/Users/abraham/Data-structures-editor/src/dataStructures/Vector.js":"8","/Users/abraham/Data-structures-editor/src/dataStructures/Matrix.js":"9","/Users/abraham/Data-structures-editor/src/dataStructures/Stack.js":"10","/Users/abraham/Data-structures-editor/src/utils/Utils.js":"11","/Users/abraham/Data-structures-editor/src/algorithms/Geometry.js":"12","/Users/abraham/Data-structures-editor/src/components/Canvas.js":"13","/Users/abraham/Data-structures-editor/src/utils/TextParser.js":"14","/Users/abraham/Data-structures-editor/src/utils/DataStructuresIdentifier.js":"15","/Users/abraham/Data-structures-editor/src/utils/CppIdentifier.js":"16","/Users/abraham/Data-structures-editor/src/dataStructures/Queue.js":"17","/Users/abraham/Data-structures-editor/src/drawableComponents/EmptyDataStructure.js":"18","/Users/abraham/Data-structures-editor/src/dataStructures/Deque.js":"19","/Users/abraham/Data-structures-editor/src/drawableComponents/Text.js":"20"},{"size":152,"mtime":1671550730802,"results":"21","hashOfConfig":"22"},{"size":3317,"mtime":1672253092283,"results":"23","hashOfConfig":"22"},{"size":4056,"mtime":1672237391925,"results":"24","hashOfConfig":"22"},{"size":882,"mtime":1672237391934,"results":"25","hashOfConfig":"22"},{"size":3588,"mtime":1672237458260,"results":"26","hashOfConfig":"22"},{"size":2397,"mtime":1672237391925,"results":"27","hashOfConfig":"22"},{"size":727,"mtime":1672245405362,"results":"28","hashOfConfig":"22"},{"size":1966,"mtime":1672250854955,"results":"29","hashOfConfig":"22"},{"size":1391,"mtime":1672250811380,"results":"30","hashOfConfig":"22"},{"size":1050,"mtime":1672250840265,"results":"31","hashOfConfig":"22"},{"size":2742,"mtime":1672245134807,"results":"32","hashOfConfig":"22"},{"size":938,"mtime":1671550730800,"results":"33","hashOfConfig":"22"},{"size":2281,"mtime":1672237440830,"results":"34","hashOfConfig":"22"},{"size":8773,"mtime":1672252610559,"results":"35","hashOfConfig":"22"},{"size":836,"mtime":1672251679930,"results":"36","hashOfConfig":"22"},{"size":460,"mtime":1672239238900,"results":"37","hashOfConfig":"22"},{"size":359,"mtime":1672250828773,"results":"38","hashOfConfig":"22"},{"size":351,"mtime":1672245291807,"results":"39","hashOfConfig":"22"},{"size":320,"mtime":1672250801229,"results":"40","hashOfConfig":"22"},{"size":334,"mtime":1672253061855,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"10hd212",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/abraham/Data-structures-editor/src/index.js",[],["88","89"],"/Users/abraham/Data-structures-editor/src/App.js",["90"],"/Users/abraham/Data-structures-editor/src/dataStructures/Graph.js",[],"/Users/abraham/Data-structures-editor/src/dataStructures/Trie.js",[],"/Users/abraham/Data-structures-editor/src/drawableComponents/Edge.js",["91","92"],"import React from \"react\"\nimport { NaturalCurve } from \"react-svg-curve\"\nimport { length, dif, sum, mul, divide, unit, perp, rotate, projectionOnCircle } from \"../algorithms/Geometry\";\n\nexport function Edge({ rank, from, to, weight, color, directed, dashedLine }) {\n  const radius = 25;\n\n  let bothEndpoints = (from !== undefined && to !== undefined);\n  let midPoint = { x: 0, y: 0 };\n  let fromOnCircle = { x: 0, y: 0 };\n  let toOnCircle = { x: 0, y: 0 };\n\n  if (bothEndpoints) {\n    let half = divide(sum(from, to), 2);\n    let dirHalfPerp = unit(perp(dif(from, half)))\n    midPoint = sum(half, mul(dirHalfPerp, -40 * rank));\n\n    fromOnCircle = projectionOnCircle(from, radius, midPoint);\n    toOnCircle = projectionOnCircle(to, radius, midPoint);\n  }\n\n  function getArrow() {\n    let dir = unit(dif(midPoint, toOnCircle));\n\n    // let p = sum(toOnCircle, mul(dir, radius));\n    let start = toOnCircle;\n    let end = sum(toOnCircle, mul(dir, 10));\n    let perpQ = unit(perp(dif(start, end)));\n    let perp1 = sum(end, mul(perpQ, 5));\n    let perp2 = sum(end, mul(perpQ, -5));\n\n    let str =\n      \" M \" + start.x + \",\" + start.y +\n      \" \" + perp1.x + \", \" + perp1.y +\n      \" \" + perp2.x + \" \" + perp2.y + \" z \";\n    // console.log(str);\n\n    return str;\n  }\n\n  const boldEdge = (color === \"black\" ? 1.5 : 3);\n  const dash = dashedLine ? 5 : 0;\n\n  return (\n    <g>\n      {\n        bothEndpoints &&\n        <NaturalCurve\n          data={[\n            [fromOnCircle.x, fromOnCircle.y],\n            [midPoint.x, midPoint.y],\n            [toOnCircle.x, toOnCircle.y],\n          ]}\n          stroke={color}\n          strokeWidth={boldEdge}\n          strokeDasharray={dash}\n          showPoints={false} />\n      }\n\n      {\n        (bothEndpoints && directed) &&\n        <path\n          d={getArrow()}\n          fill={color}\n          stroke={color} />\n      }\n\n      {\n        (bothEndpoints && weight) &&\n        <text\n          x={midPoint.x + 10}\n          y={midPoint.y + 10}\n          fill=\"black\" >\n          {weight}\n        </text>\n      }\n    </g>\n  );\n}\n\nexport function Loop({ from, to, weight, color, directed }) {\n  let bothEndpoints = (from !== undefined && to !== undefined);\n\n  let textPos = { x: 0, y: 0 };\n  if (bothEndpoints) {\n    textPos.x = (from.x + to.x) / 2;\n    textPos.y = (from.y + to.y) / 2;\n  }\n\n  const boldEdge = (color === \"black\" ? 1.5 : 3);\n  const dx = 0;\n  const dy = -35;\n\n  function getArrow() {\n    let loopOutside = {\n      x: from.x + 20,\n      y: from.y + dy\n    };\n\n    let dir = unit(dif(loopOutside, from));\n\n    let p = {\n      x: loopOutside.x - 5.5,\n      y: loopOutside.y + 13.5\n    };\n    let q = sum(p, mul(dir, 8));\n\n    let perpQ = unit(perp(dif(p, q)));\n    let perp1 = sum(q, mul(perpQ, 5));\n    let perp2 = sum(q, mul(perpQ, -5));\n\n    let str =\n      \" M \" + p.x + \",\" + p.y +\n      \" \" + perp1.x + \", \" + perp1.y +\n      \" \" + perp2.x + \" \" + perp2.y + \" z \";\n    // console.log(str);\n\n    return str;\n  }\n\n  console.log(from.x, from.y);\n\n  return (\n    <g>\n      {\n        bothEndpoints &&\n        <circle\n          cx={from.x + dx}\n          cy={from.y + dy}\n          r={20}\n          fill=\"none\"\n          stroke={color}\n          strokeWidth={boldEdge}\n        />\n      }\n\n      {\n        (bothEndpoints && directed) &&\n        <path\n          d={getArrow()}\n          fill={color}\n          stroke={color} />\n      }\n\n      {\n        (bothEndpoints && weight) &&\n        <text\n          x={textPos.x + dx}\n          y={textPos.y + 1.8 * dy}\n          fill=\"black\" >\n          {weight}\n        </text>\n      }\n    </g>\n  );\n}","/Users/abraham/Data-structures-editor/src/drawableComponents/Node.js",[],"/Users/abraham/Data-structures-editor/src/drawableComponents/Rectangle.js",[],"/Users/abraham/Data-structures-editor/src/dataStructures/Vector.js",[],"/Users/abraham/Data-structures-editor/src/dataStructures/Matrix.js",["93"],"import EmptyDataStructure from \"../drawableComponents/EmptyDataStructure\";\nimport { DEFAULT_NODE_COLOR, BLOCK_WITH_VERTICAL_SPACE_HEIGHT, BLOCK_HEIGHT } from \"../utils/Utils\";\nimport { Vector } from \"./Vector\";\n\nexport class Matrix {\n  constructor(top, name = \"Matrix\") {\n    this.currentColor = DEFAULT_NODE_COLOR;\n    this.data = [];\n    this.left = 0;\n    this.top = top;\n    this.height = 0;\n    this.width = 0;\n    this.name = name;\n  }\n\n  addRow() {\n    this.height += BLOCK_WITH_VERTICAL_SPACE_HEIGHT;\n    this.data.push([]);\n  }\n\n  updateLastElementColor(color) {\n    if (this.data.length > 0) {\n      if (this.data.at(-1).length > 0) {\n        this.data.at(-1).at(-1).color = color;\n      }\n    }\n  }\n\n  lastRowPushBack(value) {\n    this.data.at(-1).push({\n      value: value,\n      color: this.currentColor,\n    })\n  }\n\n  empty() {\n    return this.data.length === 0;\n  }\n\n  get draw() {\n    if (this.empty()) {\n      return (\n        <EmptyDataStructure\n          x={this.left}\n          y={this.top}\n        />\n      );\n    }\n\n    let objects = [];\n    this.data.forEach((row, rowIndex) => {\n      const rowVector = new Vector(rowIndex * BLOCK_WITH_VERTICAL_SPACE_HEIGHT + this.top);\n      row.forEach((element, columnIndex) => {\n        rowVector.pushBack(element.value, element.color);\n      });\n      objects = objects.concat(rowVector.draw);\n    });\n\n    return objects;\n  }\n}","/Users/abraham/Data-structures-editor/src/dataStructures/Stack.js",[],"/Users/abraham/Data-structures-editor/src/utils/Utils.js",["94"],"export const DEFAULT_NODE_COLOR = \"#c9a9ff\";\nexport const BLACK = \"black\";\n\nexport const BLOCK_HEIGHT = 45;\nexport const SPACE = 10;\nexport const BLOCK_WITH_VERTICAL_SPACE_HEIGHT = BLOCK_HEIGHT + SPACE;\nexport const VERTICAL_DISTANCE = 50;\n\nexport function getRandom(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nexport function isNumeric(num) {\n  return !isNaN(num)\n}\n\nexport function isColor(x) {\n  x = x.toLowerCase();\n  let s = new Option().style\n  s.color = x\n  let test1 = s.color === x\n  let test2 = /^#[0-9A-F]{6}$/i.test(x)\n  return (test1 === true || test2 === true)\n}\n\nexport function isDash(x) {\n  x = x.toLowerCase();\n  return x === \"dash\";\n}\n\nexport function isSpace(c) {\n  return (c === ' ') || (c === '\\t');\n}\n\nexport function divideByTokens(str) {\n  let result = [];\n  let last = \"\";\n  for (let i in str) {\n    let c = str[i];\n    if (isSpace(c)) {\n      if (last !== \"\") {\n        result.push(last.trim());\n      }\n      last = \"\";\n    } else {\n      last += c;\n    }\n  }\n  if (last !== \"\") {\n    result.push(last.trim());\n  }\n  return result;\n}\n\nexport function isLight(col) {\n  let cur = col.charAt(0) === '#' ? col.substring(1, 7) : col;\n  let r = parseInt(cur.substring(0, 2), 16); // hexToR\n  let g = parseInt(cur.substring(2, 4), 16); // hexToG\n  let b = parseInt(cur.substring(4, 6), 16); // hexToB\n  return (((r * 0.299) + (g * 0.587) + (b * 0.114)) > 186);\n}\n\nexport function pickTextColor(color) {\n  return isLight(color) ? \"black\" : \"white\";\n}\n\nfunction getRGB(rgb) {\n  let el = document.createElement(\"div\");\n  el.style[\"background-color\"] = rgb;\n  document.body.appendChild(el);\n\n  let style = window.getComputedStyle(el);\n  let color = style[\"backgroundColor\"];\n  document.body.removeChild(el);\n\n  return color;\n}\n\nfunction parseColor(color) {\n  let arr = [];\n  color.replace(/[\\d+\\.]+/g, function (v) {\n    arr.push(parseFloat(v));\n  });\n  return \"#\" + arr.slice(0, 3).map(toHex).join(\"\");\n}\n\nfunction toHex(int) {\n  let hex = int.toString(16);\n  return hex.length === 1 ? \"0\" + hex : hex;\n}\n\nexport function lightenColor(col, amt) {\n  if (col.charAt(0) !== '#') {\n    col = parseColor(getRGB(col));\n  }\n\n  let cur = col.charAt(0) === '#' ? col.substring(1, 7) : col;\n\n  let r = Math.max(Math.min(255, parseInt(cur.substring(0, 2), 16) + amt), 0).toString(16)\n  let g = Math.max(Math.min(255, parseInt(cur.substring(2, 4), 16) + amt), 0).toString(16)\n  let b = Math.max(Math.min(255, parseInt(cur.substring(4, 6), 16) + amt), 0).toString(16)\n\n  const rr = (r.length < 2 ? '0' : '') + r\n  const gg = (g.length < 2 ? '0' : '') + g\n  const bb = (b.length < 2 ? '0' : '') + b\n  return `#${rr}${gg}${bb}`\n}\n\nexport function getWidthFromText(text) {\n  return Math.max(BLOCK_HEIGHT, text.length * 15);\n}","/Users/abraham/Data-structures-editor/src/algorithms/Geometry.js",[],"/Users/abraham/Data-structures-editor/src/components/Canvas.js",["95","96","97","98","99","100","101","102","103"],"import React, { useState, useCallback, useThrottled, useEffect } from \"react\";\nimport Rectangle from \"../drawableComponents/Rectangle\";\n\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 0.3;\nconst ZOOM_INCREMENT = 0.25;\n\nexport default function Canvas({ objects }) {\n  const [zoom, setZoom] = useState(1.5);\n  const [dragging, setDragging] = useState(false);\n  const [top, setTop] = useState(0);\n  const [left, setLeft] = useState(50);\n  const [relativeTop, setRelativeTop] = useState(0);\n  const [relativeLeft, setRelativeLeft] = useState(0);\n  const [windowWidth, setWindowWidth] = useState(Number(window.innerWidth));\n  const [windowHeight, setWindowHeight] = useState(Number(window.innerHeight));\n\n  const mouseDown = useCallback((e) => {\n    e.stopPropagation();\n    e.preventDefault();\n    if (e.button !== 0) {\n      return; // Should only run code from left mouse click\n    }\n    // console.log(\"mouseDown\", e.pageX, e.pageY, e);\n    setDragging(true);\n    setRelativeLeft(e.pageX - left);\n    setRelativeTop(e.pageY - top);\n  }, [left, top]);\n\n  const mouseUp = useCallback((e) => {\n    // console.log(\"mouseUp\");\n    e.stopPropagation();\n    e.preventDefault();\n    setDragging(false);\n  }, []);\n\n  const moveMouse = useCallback((e) => {\n    // console.log(\"moveMouse\");\n    e.stopPropagation();\n    e.preventDefault();\n    if (!dragging) {\n      return;\n    }\n    setLeft(e.pageX - relativeLeft);\n    setTop(e.pageY - relativeTop);\n  }, [dragging]);\n\n  useEffect(() => {\n    // console.log(left, top, dragging);\n\n    document.addEventListener('mousemove', moveMouse);\n    document.addEventListener('mouseup', mouseUp);\n    // window.addEventListener('resize', updateWindowDimensions);\n    return () => {\n      document.removeEventListener('mousemove', moveMouse);\n      document.removeEventListener('mouseup', mouseUp);\n      // window.removeEventListener('resize', updateWindowDimensions);\n    };\n  }, [moveMouse, mouseUp, mouseDown]);\n\n  return (\n    <div className=\"scrollable-image\">\n      <svg className=\"image\"\n        viewBox={`${-left} ${-top} ${windowWidth} ${windowHeight}`}\n        onMouseDown={mouseDown}\n        onMouseUp={mouseUp}\n        onMouseMove={moveMouse}>\n        <g transform={`scale(${zoom})`}>\n          {objects}\n        </g>\n      </svg>\n    </div>\n  );\n}","/Users/abraham/Data-structures-editor/src/utils/TextParser.js",["104","105"],"/Users/abraham/Data-structures-editor/src/utils/DataStructuresIdentifier.js",[],"/Users/abraham/Data-structures-editor/src/utils/CppIdentifier.js",[],"/Users/abraham/Data-structures-editor/src/dataStructures/Queue.js",["106","107"],"import { BLOCK_WITH_VERTICAL_SPACE_HEIGHT } from \"../utils/Utils\";\nimport Rectangle from \"../drawableComponents/Rectangle\";\nimport { Vector } from \"./Vector\";\n\nexport class Queue extends Vector {\n  constructor(top, name = \"Queue\") {\n    super(top);\n    this.name = name;\n  }\n\n  push(value) {\n    this.pushBack(value);\n  }\n\n  pop() {\n    this.popFront();\n  }\n}","/Users/abraham/Data-structures-editor/src/drawableComponents/EmptyDataStructure.js",[],"/Users/abraham/Data-structures-editor/src/dataStructures/Deque.js",[],"/Users/abraham/Data-structures-editor/src/drawableComponents/Text.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":103,"column":6,"nodeType":"114","endLine":103,"endColumn":12,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":3,"column":10,"nodeType":"118","messageId":"119","endLine":3,"endColumn":16},{"ruleId":"116","severity":1,"message":"120","line":3,"column":53,"nodeType":"118","messageId":"119","endLine":3,"endColumn":59},{"ruleId":"116","severity":1,"message":"121","line":2,"column":64,"nodeType":"118","messageId":"119","endLine":2,"endColumn":76},{"ruleId":"122","severity":1,"message":"123","line":81,"column":22,"nodeType":"124","messageId":"125","endLine":81,"endColumn":23,"suggestions":"126"},{"ruleId":"116","severity":1,"message":"127","line":1,"column":40,"nodeType":"118","messageId":"119","endLine":1,"endColumn":52},{"ruleId":"116","severity":1,"message":"128","line":2,"column":8,"nodeType":"118","messageId":"119","endLine":2,"endColumn":17},{"ruleId":"116","severity":1,"message":"129","line":4,"column":7,"nodeType":"118","messageId":"119","endLine":4,"endColumn":15},{"ruleId":"116","severity":1,"message":"130","line":5,"column":7,"nodeType":"118","messageId":"119","endLine":5,"endColumn":15},{"ruleId":"116","severity":1,"message":"131","line":6,"column":7,"nodeType":"118","messageId":"119","endLine":6,"endColumn":21},{"ruleId":"116","severity":1,"message":"132","line":9,"column":16,"nodeType":"118","messageId":"119","endLine":9,"endColumn":23},{"ruleId":"116","severity":1,"message":"133","line":15,"column":23,"nodeType":"118","messageId":"119","endLine":15,"endColumn":37},{"ruleId":"116","severity":1,"message":"134","line":16,"column":24,"nodeType":"118","messageId":"119","endLine":16,"endColumn":39},{"ruleId":"112","severity":1,"message":"135","line":46,"column":6,"nodeType":"114","endLine":46,"endColumn":16,"suggestions":"136"},{"ruleId":"116","severity":1,"message":"137","line":3,"column":10,"nodeType":"118","messageId":"119","endLine":3,"endColumn":15},{"ruleId":"116","severity":1,"message":"138","line":4,"column":10,"nodeType":"118","messageId":"119","endLine":4,"endColumn":14},{"ruleId":"116","severity":1,"message":"139","line":1,"column":10,"nodeType":"118","messageId":"119","endLine":1,"endColumn":42},{"ruleId":"116","severity":1,"message":"128","line":2,"column":8,"nodeType":"118","messageId":"119","endLine":2,"endColumn":17},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'parser'. Either include it or remove the dependency array.","ArrayExpression",["142"],"no-unused-vars","'length' is defined but never used.","Identifier","unusedVar","'rotate' is defined but never used.","'BLOCK_HEIGHT' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["143","144"],"'useThrottled' is defined but never used.","'Rectangle' is defined but never used.","'MAX_ZOOM' is assigned a value but never used.","'MIN_ZOOM' is assigned a value but never used.","'ZOOM_INCREMENT' is assigned a value but never used.","'setZoom' is assigned a value but never used.","'setWindowWidth' is assigned a value but never used.","'setWindowHeight' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'relativeLeft' and 'relativeTop'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLeft' needs the current value of 'relativeLeft'.",["145"],"'Graph' is defined but never used.","'Trie' is defined but never used.","'BLOCK_WITH_VERTICAL_SPACE_HEIGHT' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"messageId":"148","fix":"149","desc":"150"},{"messageId":"151","fix":"152","desc":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [parser, text]",{"range":"156","text":"157"},"removeEscape",{"range":"158","text":"159"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"160","text":"161"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [dragging, relativeLeft, relativeTop]",{"range":"162","text":"163"},[2342,2348],"[parser, text]",[1826,1827],"",[1826,1826],"\\",[1436,1446],"[dragging, relativeLeft, relativeTop]"]