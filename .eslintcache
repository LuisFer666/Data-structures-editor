[{"/Users/abraham/graph-editor/src/index.js":"1","/Users/abraham/graph-editor/src/App.js":"2","/Users/abraham/graph-editor/src/Canvas.js":"3","/Users/abraham/graph-editor/src/Stuff.js":"4","/Users/abraham/graph-editor/src/Edge.js":"5","/Users/abraham/graph-editor/src/Node.js":"6","/Users/abraham/graph-editor/src/Trie.js":"7","/Users/abraham/graph-editor/src/PrettyTree.js":"8","/Users/abraham/graph-editor/src/Geometry.js":"9"},{"size":152,"mtime":1611711971020,"results":"10","hashOfConfig":"11"},{"size":6522,"mtime":1614907105359,"results":"12","hashOfConfig":"11"},{"size":3199,"mtime":1615767394276,"results":"13","hashOfConfig":"11"},{"size":2291,"mtime":1614052585764,"results":"14","hashOfConfig":"11"},{"size":3178,"mtime":1615786624102,"results":"15","hashOfConfig":"11"},{"size":2394,"mtime":1615786133780,"results":"16","hashOfConfig":"11"},{"size":878,"mtime":1614052824741,"results":"17","hashOfConfig":"11"},{"size":5977,"mtime":1615788373406,"results":"18","hashOfConfig":"11"},{"size":744,"mtime":1615786502387,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"14828u7",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/abraham/graph-editor/src/index.js",[],["40","41"],"/Users/abraham/graph-editor/src/App.js",[],"/Users/abraham/graph-editor/src/Canvas.js",[],"/Users/abraham/graph-editor/src/Stuff.js",["42"],"export function getRandom(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nexport function isNumeric(num) {\n  return !isNaN(num)\n}\n\nexport function isColor(x) {\n  let s = new Option().style\n  s.color = x\n  let test1 = s.color === x\n  let test2 = /^#[0-9A-F]{6}$/i.test(x)\n  return (test1 === true || test2 === true)\n}\n\nexport function isSpace(c) {\n  return (c === ' ') || (c === '\\t');\n}\n\nexport function divideByTokens(str) {\n  var result = [];\n  var last = \"\";\n  for (var i in str) {\n    var c = str[i];\n    if (isSpace(c)) {\n      if (last !== \"\") {\n        result.push(last);\n      }\n      last = \"\";\n    } else {\n      last += c;\n    }\n  }\n  if (last !== \"\") {\n    result.push(last);\n  }\n  return result;\n}\n\nexport function isLight(col) {\n  var cur = col.charAt(0) === '#' ? col.substring(1, 7) : col;\n  var r = parseInt(cur.substring(0, 2), 16); // hexToR\n  var g = parseInt(cur.substring(2, 4), 16); // hexToG\n  var b = parseInt(cur.substring(4, 6), 16); // hexToB\n  return (((r * 0.299) + (g * 0.587) + (b * 0.114)) > 186);\n}\n\nexport function pickTextColor(col) {\n  return isLight(col) ? \"black\" : \"white\";\n}\n\nfunction getRGB(v) {\n  var el = document.createElement(\"div\");\n  el.style[\"background-color\"] = v;\n  document.body.appendChild(el);\n\n  var style = window.getComputedStyle(el);\n  var color = style[\"backgroundColor\"];\n  document.body.removeChild(el);\n\n  return color;\n}\n\nfunction parseColor(color) {\n  var arr = []; \n  color.replace(/[\\d+\\.]+/g, function(v) { \n    arr.push(parseFloat(v));\n  });\n  return \"#\" + arr.slice(0, 3).map(toHex).join(\"\");\n}\n\nfunction toHex(int) {\n  var hex = int.toString(16);\n  return hex.length === 1 ? \"0\" + hex : hex;\n}\n\nexport function lightenColor(col, amt) {\n  if (col.charAt(0) !== '#') {\n    col = parseColor(getRGB(col));\n  }\n  \n  var cur = col.charAt(0) === '#' ? col.substring(1, 7) : col;\n  \n  var r = Math.max(Math.min(255, parseInt(cur.substring(0, 2), 16) + amt), 0).toString(16)\n  var g = Math.max(Math.min(255, parseInt(cur.substring(2, 4), 16) + amt), 0).toString(16)\n  var b = Math.max(Math.min(255, parseInt(cur.substring(4, 6), 16) + amt), 0).toString(16)\n  \n  const rr = (r.length < 2 ? '0' : '') + r\n  const gg = (g.length < 2 ? '0' : '') + g\n  const bb = (b.length < 2 ? '0' : '') + b\n  return `#${rr}${gg}${bb}`\n}","/Users/abraham/graph-editor/src/Edge.js",["43","44"],"/Users/abraham/graph-editor/src/Node.js",[],"/Users/abraham/graph-editor/src/Trie.js",[],"/Users/abraham/graph-editor/src/PrettyTree.js",[],"/Users/abraham/graph-editor/src/Geometry.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":67,"column":22,"nodeType":"51","messageId":"52","endLine":67,"endColumn":23,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":2,"column":10,"nodeType":"56","messageId":"57","endLine":2,"endColumn":16},{"ruleId":"54","severity":1,"message":"58","line":2,"column":45,"nodeType":"56","messageId":"57","endLine":2,"endColumn":51},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["61","62"],"no-unused-vars","'length' is defined but never used.","Identifier","unusedVar","'rotate' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"63","fix":"64","desc":"65"},{"messageId":"66","fix":"67","desc":"68"},"removeEscape",{"range":"69","text":"70"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"71","text":"72"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[1464,1465],"",[1464,1464],"\\"]